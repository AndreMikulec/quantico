% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxilary.R
\name{runRanksMS}
\alias{runRanksMS}
\title{rolling ranks using package matrixStats.}
\usage{
runRanksMS(x, laggedCols = NULL, base = 0, window = 10, ranks = 4,
  ties.method = "average", na.pad = TRUE, ...)
}
\arguments{
\item{x}{xts object}

\item{laggedCols}{character vector of regular expressions or column names.
This allows the user to give the names of the original column(the lag0 column)
and the "window - 1" columns(the lag1, ... lag(window -1)).  This may be VERY useful
if the columns already exist, so the columns (internally) do not
need to be EXPENSIVELY created.
If this parameter is used then parameters "base" and "window" are ignored.}

\item{base}{passed to LagXts.  See ? LagXts.}

\item{window}{10(default) lag to determine the ranks.}

\item{ranks}{4(default) number of ranks. A lower value
means a lower rank number.}

\item{ties.method}{"average"(default) passed to matrixStats::rowRanks parameter ties.method}

\item{na.pad}{passed to LagXts}

\item{...}{dots passed to LagXts}
}
\value{
xts object
}
\description{
Note: this may use MUCH memory.  the number of new  matrix columns
created is equal to "ranks - 1".  Also, time may be used to
create these columns.
}
\details{
In most cases, one may be better off using the function: runRanksTTR.

"base" and "ranks" can be cleverly manipulated to get, for example,
ranks from observations not directly adjacent to each other. An examle
is not shown.
}
\examples{
\dontrun{

runRanksMS(xts(sample(4,4,T), zoo::as.Date(0:3)), window = 4)

runRanksMS(xts(matrix(c(2,2,4,4),ncol=1), zoo::as.Date(0:3)), window = 4, ties.method = "max")
runRanksMS(xts(matrix(c(2,2,4,4),ncol=1), zoo::as.Date(0:3)), window = 4, ties.method = "average")
runRanksMS(xts(matrix(c(2,2,4,4),ncol=1), zoo::as.Date(0:3)), window = 4, ties.method = "min")

runRanksMS(xts(sample(10,10,T), zoo::as.Date(0:9)), window = 4)

runRanksMS(xts(sample(10,10,T), zoo::as.Date(0:9)), window = 3, ranks = 3)

runRanksMS(xts(sample(10,10,T), zoo::as.Date(0:9)), window = 4, ranks = 2)

}
}
