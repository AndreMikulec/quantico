% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxilary.R
\name{rollApply}
\alias{rollApply}
\title{apply rolling}
\usage{
rollApply(xTs = NULL, width = NULL, partial = NULL, align = NULL,
  Fun = NULL, by = NULL, by.column = NULL, fill = NULL,
  coredata = NULL, AltName = NULL, FixedSep = NULL, ...)
}
\arguments{
\item{xTs}{xts object}
}
\value{
modified xts object
}
\description{
The best roller can roll anything with the most features
The idea is that I can control(change) the INTERIOR data OF NAs founds
within the middle of the data.
This data and middle of data is meant to be sent
to package TTR/PerformanceAnaltics functions.
TTR functions reject(error out) on NAs found in the interior.
}
\details{
Here I can estimate or replace those NAs found in the middle of the data
before that data reaches TTR functions
}
\examples{
\dontrun{
#
#
# > require(TTR)
# > SMA(xts(c(0,1,2,3,NA), zoo::as.Date(0:4)), n = 2)
# Error in runSum(x, n) : Series contains non-leading NAs
#
# > SMA(xts(c(0,1,NA,3,4), zoo::as.Date(0:4)), n = 2)
# Error in runSum(x, n) : Series contains non-leading NAs
#
# > SMA(xts(c(NA,1,2,3,4), zoo::as.Date(0:4)), n = 2)
#            SMA
# 1970-01-01  NA
# 1970-01-02  NA
# 1970-01-03 1.5
# 1970-01-04 2.5
# 1970-01-05 3.5
#
# > rollApply(xts(c(0,-1,2,-3,4), zoo::as.Date(0:4)), Fun = trueSortinoRatio, AltName = "SRTN", partial = TRUE, width = 2, MinRows = 2)
#
#                          SRTN.2
# 1970-01-01                   NA
# 1970-01-02 -0.70710678118654746
# 1970-01-03  0.70710678118654746
# 1970-01-04 -0.23570226039551587
# 1970-01-05  0.23570226039551587
#
# # dimunitive SMA ( removes NA values )
# DSMA <- function(x, n, QTY) {
#                        # SMA requirement
#   if((n <= NROW(x)) && (2 <= NROW(x))) {
#
#     # remove data
#     if(is.vector(x))       x <- x[!is.na(x)]
#     if(inherits(x, "zoo")) x <- x[coredata(!is.na(x)),]
#
#                           # SMA requirement
#     if((n <= NROW(x)) && (2 <= NROW(x))) {
#       result <- TTR::SMA(x = x, n = n)
#       if(QTY == "All") {
#         result
#       } else if(QTY == "Last") {
#         tail(result,1)
#       } else { stop("Need to provide QTY") }
#     } else {
#       return(NA_real_)  # too short
#     }
#
#   } else {
#     return(NA_real_)  # too short
#   }
#
# }
# > xts(c(0,1,NA,3,4), zoo::as.Date(0:4))
#            [,1]
# 1970-01-01    0
# 1970-01-02    1
# 1970-01-03   NA
# 1970-01-04    3
# 1970-01-05    4
#
# DSMA(xts(c(0,1,NA,3,4), zoo::as.Date(0:4)), 2, QTY = "All")
#
#            SMA
# 1970-01-01  NA
# 1970-01-02 0.5  # I programmed to loose NA observations ( and its index entries)
# 1970-01-04 2.0  # unless, I come up with a *better way* to re-organize 'around' the [NA] data
# 1970-01-05 3.5  # then that is the best answer I have NOW.
#
# rollApply(xts(c(0,1,NA,3,4), zoo::as.Date(0:4)), Fun = DSMA, AltName = "MATH", partial = FALSE, width = 2, n = 2, QTY = "Last")
#                                                                              # because I programmed around THIS
# rollApply(xts(c(0,1,NA,3,4), zoo::as.Date(0:4)), Fun = DSMA, AltName = "MATH", partial = TRUE, width = 2, n = 2,QTY = "Last")
#
#            MATH.2
# 1970-01-01     NA
# 1970-01-02    0.5
# 1970-01-03     NA
# 1970-01-04     NA
# 1970-01-05    3.5
#
#
#
}
}
