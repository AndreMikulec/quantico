% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database.R
\name{dbUpdate}
\alias{dbUpdate}
\title{update a database table with 'updated' data}
\usage{
dbUpdate(con, trgt = "mtcars", keys = c("rn"), df = mtcars,
  varHint = NULL, valHint = NULL)
}
\arguments{
\item{con}{DBI connection}

\item{trgt}{remote server side string database table name of old data}

\item{keys}{trgt remote server side vector of strings of table
column names that make up a unique id for the row}

\item{df}{local client side data.frame of 'updated data'}

\item{varHint}{optional vector of character column names. Performance optimization
techique to limit the number of rows returned
from the database server to the client(R).
User must specify as paired position values.
e.g. varHint = "dateindex", valHint = "17000"
or e.g. varHint = c("dateindex", "ticker"), valHint = c("dateindex","'AAPL'")
Otherwise if varHint/valHint are not specified,
then the unique combinations of the keys of the 'updated data' data.frame df
are sent to the server to limit the number of rows returned from the server
Position matches one to one with valHint}

\item{valHint}{See varHint. Position matches one to one with varHint}
}
\description{
WORKINPROGRESS
note: beforehand LIKE caroline make SURE that each
has the same column names as the OTHER
hand written during DEC 2018 vacation ( 100% ANY UNTESTED )
}
\details{
TODO [ ] INSTEAD: UPLOAD/WRITE TO A *temporary* TABLE (HIGH)
TODO [ ] part of dbUpsert <- function() { dbAddColumn, dbInsert, dbUpdate }

# NOT necessarily in ordesr
TODO [ ] reorder columns to match db table see ( currenly assumned ) BUT NOW
  add that code in here ( see caroline dbWriteTable2, my implementation, my
  'sort using factor code' in a tradeModel function )
TODO [ ] make argument keys = NULL, then detect and reject is.null(keys)
TODO [ ] allow non-joined mass updates: keys = c() and UpDateWhereExactly = "1 = 1"
TODO [ ] replace siQuote with DBI:: dbQuoteLiteral, dbQuoteString ( see tradeModel )
TODO [ ] in more places dbQuoteIdentifier ( see tradeModel )
TODO [ ] handle PostgreSQL schemas
TODO [ ] handle 'newer' package RPostgre
TODO   [ ] create a REAL temp table instead of a real real table (SEE ABOVE
}
\examples{
\dontrun{

# setup
SuBmtcars <- mtcars[c(1,5),1:2]
oldData <- data.table::data.table(SuBmtcars, keep.rownames=TRUE, key="rn")
rownames(oldData) <- NULL
oldData[1,2] <- NA; oldData[2,3] <- NA
con <- DBI::dbConnect(RPostgreSQL::PostgreSQL(), user = "postgres")
DBI::dbWriteTable(con, "mtcars", oldData, row.names = FALSE)

newData <- data.table::data.table(SuBmtcars, keep.rownames=TRUE, key="rn")
rownames(newData) <- NULL
newData[2,2] <- NA; newData[1,3] <- NA

dbUpdate(con, df = newData)
DBI::dbDisconnect(con)

}
}
