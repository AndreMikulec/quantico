% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database.R
\name{pgUpsize}
\alias{pgUpsize}
\title{addto/update a database with new information}
\usage{
pgUpsize(
  con,
  trgt = NULL,
  keys = NULL,
  schname = NULL,
  df = NULL,
  varHint = NULL,
  valHint = NULL,
  ...
)
}
\arguments{
\item{con}{DBI connection PostgreSQL}

\item{trgt}{remote server side string database table name of old data}

\item{keys}{trgt remote server side vector of strings of table
column names that make up a unique id for the row.
keys can not be zero length. keys can not be null.}

\item{schname}{schema name}

\item{df}{local client side data.frame of 'updated data'
if parameter oldData is not null, then df is not used.}

\item{varHint}{optional vector of character column names. Performance optimization
techique to limit the number of rows returned
from the database server to the client(R).
User must specify as paired position values.
e.g. varHint = "dateindex", valHint = "17000"
or e.g. varHint = c("dateindex", "ticker"), valHint = c("17000","'AAPL'")
Position matches one to one with valHint.
Parameter varHint is sent to pgOldData.}

\item{valHint}{See varHint. Position matches one to one with varHint.
Parameter valHint is sent to pgOldData.}

\item{...}{dots passed to pgUpdate}
}
\description{
\preformatted{

}
}
\examples{
\dontrun{

# setup
SuBmtcars <- mtcars[c(1,5),1:2]
oldData <- data.table::data.table(SuBmtcars, keep.rownames=TRUE, key="rn")
oldData[1,2] <- NA; oldData[2,3] <- NA

con <- DBI::dbConnect(RPostgreSQL::PostgreSQL(max.con = 100), user = "postgres")
DBI::dbExecute(con, "DROP TABLE IF EXISTS public.mtcars")
DBI::dbWriteTable(con, "mtcars", oldData, row.names = FALSE)

newData <- data.table::data.table(SuBmtcars, keep.rownames=TRUE, key="rn")
newData[2,2] <- NA; newData[1,3] <- NA

newInsData <- data.table::data.table(mtcars[12, 2, drop = FALSE], keep.rownames=TRUE, key="rn")

# new data
pgUpsize(con, trgt = "mtcars", keys = "rn", schname = "public",
  df = newInsData, varHint = "cyl", valHint = "8")
# current data
pgUpsize(con, trgt = "mtcars", keys = "rn", schname = "public", df = newData)

DBI::dbDisconnect(con)

}
}
