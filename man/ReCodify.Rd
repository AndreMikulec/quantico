% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database.R
\name{ReCodify}
\alias{ReCodify}
\title{Recodes values in a vector.}
\usage{
ReCodify(x, oldcode = sort(unique(x)), newcode, Strict = FALSE)
}
\arguments{
\item{x}{vector or list of R objects}

\item{oldcode}{vector or list of old codes}

\item{newcode}{vector or list of new codes}

\item{Strict}{FALSE(default) Method too choose the check compatibility.
if oldcode and newcode are not [exactly] the same class.
Assume that if newcode and newcode inherit any of the other's classes
then the two classes are compatatible. Results will be attempted
to be returned as a vector.
Strict(TRUE) both oldcode and newcode must have the exact same class.
Results will be attempted to be returned as a vector.
Otherwise, the results will be attempted be returned as a list.
:NOTE: if not all the 'x' elements are attemped to be recoded then the
returned list may be composed of elements of different classes.}
}
\description{
WORK IN PROGRESS
}
\details{
Adapted from blockmodeling::recode.
Originally enhanced to be intermediary coding item
in the processes assignment of xts index time classes from one
class to another. If the oldcode and newcode classes
are not compatiable (see below)
then results are returned as elements in a a list.
}
\examples{
\dontrun{
}
}
