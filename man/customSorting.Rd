% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database.R
\name{customSorting}
\alias{customSorting}
\alias{customSorting.default}
\alias{customSorting.character}
\alias{customSorting.numeric}
\alias{customSorting.Date}
\alias{customSorting.yearmon}
\alias{customSorting.yearqtr}
\alias{customSorting.POSIXct}
\alias{customSorting.chron}
\alias{customSorting.timeSeries}
\title{custom sorting a vector}
\usage{
customSorting(x, ...)

\method{customSorting}{default}(x, ...)

\method{customSorting}{character}(x, InitOrder, CI = FALSE,
  sortVectorExcess = TRUE, chopVectorExcess = FALSE, ...)

\method{customSorting}{numeric}(x, InitOrder, CI = FALSE,
  sortVectorExcess = TRUE, chopVectorExcess = FALSE, ...)

\method{customSorting}{Date}(x, InitOrder, ...)

\method{customSorting}{yearmon}(x, InitOrder, ...)

\method{customSorting}{yearqtr}(x, InitOrder, ...)

\method{customSorting}{POSIXct}(x, InitOrder, ...)

\method{customSorting}{chron}(x, InitOrder, ...)

\method{customSorting}{timeSeries}(x, InitOrder, ...)
}
\arguments{
\item{x}{vector  to be sorted}

\item{...}{dots passed}

\item{InitOrder}{starting custom sorting ( without the excess )}

\item{CI}{FALSE(default) whether or not Vector excess items that are
not found in InitOrder  are sorted 'not case insensitive'(TRUE) or
ncase sensitive'(FALSE).  Sorting is done by "lower()"}

\item{sortVectorExcess}{TRUE(default) whether or not Vector excess columns
are attempted to be sorted (TRUE) or not attempted to be sorted (FALSE)}

\item{chopVectorExcess}{FALSE(default) whether or not excess (x) elements
not found in InitOrder are removed}
}
\value{
vector sorted by InitOrder
}
\description{
excess Vector elements are appended to the end ( sort or not sort, CI sort or CS sort )
other elements found in InitOrder that are 'not found in Vector' are ignored

class 'timeSeries' does not have a customSorting implementation
}
\examples{
\dontrun{

customSorting( c("a","v", "E2", "c","l", "e3" ,"h","o","date"),
   InitOrder = c("date", "o", "h", "l", "c", "v", "a"), CI = TRUE
)
[1] "date" "o"    "h"    "l"    "c"    "v"    "a"    "E2"   "e3"

customSorting(c("E","B","C","D","A"), c("D","B","C"), sortVectorExcess = FALSE)
[1] "D" "B" "C" "E" "A"

# excess(Vector)  "G", "F"

# customSorting(c("G", "D","B","C", "F"), c("E","B","C","D","A"))
[1]"B" "C" "D" "F" "G"

customSorting(c("G", "D","B","C", "F"), c("E","B","C","D","A"), sortVectorExcess = FALSE)
[1] "B" "C" "D" "G" "F"

# other(InitOrder) ignored "F"
customSorting(c("E","B","C","D","A"), c("F", "D","B","C"), sortVectorExcess = FALSE)
[1] "D" "B" "C" "E" "A"

}
\dontrun{
customSorting(c(7,4,2,3,6), c(5,2,3,4,1))
[1] 2 3 4 6 7
}
\dontrun{
# Date examples

customSorting(zoo::as.Date(6:3), zoo::as.Date(1:4))
[1] "1970-01-04" "1970-01-05" "1970-01-06" "1970-01-07"

customSorting(zoo::as.Date(6:3), zoo::as.Date(1:4), sortVectorExcess = FALSE)
[1] "1970-01-04" "1970-01-05" "1970-01-07" "1970-01-06"

customSorting(zoo::as.Date(6:3), zoo::as.Date(1:4), sortVectorExcess = FALSE, chopVectorExcess = TRUE)
[1] "1970-01-04" "1970-01-05"
}
}
\references{
\cite{Custom Sorting in R \url{https://stackoverflow.com/questions/23995285/custom-sorting-in-r}}

\cite{Case insensitive sort of vector of string in R \url{https://stackoverflow.com/questions/29890303/case-insensitive-sort-of-vector-of-string-in-r}}
}
