% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database.R
\name{ReCode}
\alias{ReCode}
\title{Recodes values in a vector.}
\usage{
ReCode(x, oldcode = sort(unique(x)), new2oldcode = NULL, newcode,
  ComepareStrict = FALSE, AssnStrict = FALSE)
}
\arguments{
\item{x}{vector or list}

\item{oldcode}{vector or list of old codes. Will be made into a vector.}

\item{new2oldcode}{intermediary vector or list belonging to the realm
of newcode but CAN be compared against/to values in oldcode.
Will be made into a vector.}

\item{newcode}{vector or list of new codes  Will be made into a vector.
Will be made into a vector.}

\item{ComepareStrict}{FALSE(default) Method too choose the check compatibility.
if oldcode and new2oldcode are not [exactly] the same class.
Assume that if oldcode and new2oldcode inherit any of the other's classes
then the two classes are compatatible. Otherwise, a warning will be
returned to the user.
Strict(TRUE) both oldcode and new2oldcode must have the exact same class.
Otherwise, a warning will be returned to the user.}

\item{AssnStrict}{FALSE(default) Method too choose the check compatibility.
if x and newcode are not [exactly] the same class.
Assume that if x and newcode inherit any of the other's classes
then the two classes are compatatible. Results will be attempted
to be returned as a vector.
Strict(TRUE) both x and newcode must have the exact same class.
Results will be attempted to be returned as a vector.
Otherwise, the results will be attempted be returned as a list.
:NOTE: if not all the 'x' elements are attemped to be recoded then the
returned list may be composed of elements of different classes.}
}
\description{
100% UNTESTED AND 100% UNTRIED
SO FAR DOES NOT WORK
}
\details{
Adapted from blockmodeling::recode.
Originally enhanced to be intermediary coding item
in the processes assignment of xts index time classes from one
class to another. If the oldcode and newcode classes
are not compatiable (see below)
then results are returned as elements in a a list.
}
\examples{
\dontrun{
}
}
